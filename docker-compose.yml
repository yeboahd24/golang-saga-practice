version: '3.8'

services:
  db-init:
    build:
      context: ./docker/db-init
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      order-db:
        condition: service_healthy
      payment-db:
        condition: service_healthy
      inventory-db:
        condition: service_healthy

  order-service:
    build:
      context: .
      dockerfile: docker/order-service/Dockerfile
    ports:
      - "9080:8080"
    depends_on:
      db-init:
        condition: service_completed_successfully
    environment:
      DB_HOST: order-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: order_service

  payment-service:
    build:
      context: .
      dockerfile: docker/payment-service/Dockerfile
    ports:
      - "9082:8082"
    depends_on:
      db-init:
        condition: service_completed_successfully
    environment:
      DB_HOST: payment-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: payment_service

  inventory-service:
    build:
      context: .
      dockerfile: docker/inventory-service/Dockerfile
    ports:
      - "9081:8081"
    depends_on:
      db-init:
        condition: service_completed_successfully
    environment:
      DB_HOST: inventory-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: inventory_service

  order-db:
    image: postgres:13
    environment:
      POSTGRES_DB: order_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - order_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  payment-db:
    image: postgres:13
    environment:
      POSTGRES_DB: payment_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - payment_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  inventory-db:
    image: postgres:13
    environment:
      POSTGRES_DB: inventory_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    volumes:
      - inventory_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6389:6379"

volumes:
  order_data:
  payment_data:
  inventory_data:
